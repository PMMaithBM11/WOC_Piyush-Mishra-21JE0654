{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"KNN mnist ","provenance":[],"authorship_tag":"ABX9TyOyPeLdiuQJX4tp8g6bkdPe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np \n","import pandas as pd\n","import matplotlib.pyplot as plt \n","import math "],"metadata":{"id":"NJY6BWcbUX9G","executionInfo":{"status":"ok","timestamp":1650295917831,"user_tz":-330,"elapsed":9,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive \n","drive.mount('/content/drive')\n","%cd /content/drive/MyDrive/\n","!pwd\n","%cd logistic_data/\n","%cp /content/emnist-letters-train.csv /content/drive/MyDrive/logistic_data\n","%cp /content/emnist-letters-test.csv /content/drive/MyDrive/logistic_data\n","! ls"],"metadata":{"id":"WCGhyz4XLRoW","executionInfo":{"status":"ok","timestamp":1650295921312,"user_tz":-330,"elapsed":3488,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"27ac81f4-0b43-4037-b16d-0a8dd2757c76"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/MyDrive\n","/content/drive/MyDrive\n","/content/drive/MyDrive/logistic_data\n","cp: cannot stat '/content/emnist-letters-train.csv': No such file or directory\n","cp: cannot stat '/content/emnist-letters-test.csv': No such file or directory\n","emnist-letters-test.csv  emnist-letters-train.csv\n"]}]},{"cell_type":"code","source":["train=pd.read_csv(\"emnist-letters-train.csv\",header=[0])\n","test=pd.read_csv(\"emnist-letters-test.csv\")"],"metadata":{"id":"7GVIfPhvLVJi","executionInfo":{"status":"ok","timestamp":1650295921960,"user_tz":-330,"elapsed":651,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["Y_train=train['23']\n","X_train = train.iloc[: , 1:]\n","X_test = test.iloc[: , 1:]\n","Y_test=test['1']"],"metadata":{"id":"M7Zkl-xyS5wk","executionInfo":{"status":"ok","timestamp":1650295921961,"user_tz":-330,"elapsed":13,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["m_train = X_train.shape[0]\n","m_test = X_test.shape[0]\n"],"metadata":{"id":"LIRd44X3LT1G","executionInfo":{"status":"ok","timestamp":1650295921963,"user_tz":-330,"elapsed":13,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["X_train=np.array(X_train)\n","X_test=np.array(X_test)\n","Y_train=np.array(Y_train)\n","Y_test=np.array(Y_test)\n","Y_train=np.vstack(Y_train)\n","Y_test=np.vstack(Y_test)\n","print(X_train.shape)\n","print(Y_train.shape)\n","print(X_test.shape)\n"],"metadata":{"id":"9Jca-FnWRneL","executionInfo":{"status":"ok","timestamp":1650295922588,"user_tz":-330,"elapsed":636,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6552e280-eaa8-4eed-98f3-c3f4c4fd0ca4"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["(5969, 784)\n","(5969, 1)\n","(5897, 784)\n"]}]},{"cell_type":"code","source":["\n","X_train = X_train.astype('float32') # specifying datatype we are using\n","X_test = X_test.astype('float32')\n","X_train = X_train / 255.0  # converting values to 0-1 \n","X_test = X_test / 255.0"],"metadata":{"id":"FAFH4C5DSRHo","executionInfo":{"status":"ok","timestamp":1650295922589,"user_tz":-330,"elapsed":8,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["def euclidean_distance(vector1, vector2):\n","    return np.sqrt(np.sum(np.power(vector1 - vector2, 2)))# dist b/w 2 points\n","def absolute_distance(vector1, vector2):\n","    return np.sum(np.absolute(vector1 - vector2)) "],"metadata":{"id":"f2MqAhr5LT3q","executionInfo":{"status":"ok","timestamp":1650295922589,"user_tz":-330,"elapsed":7,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["\n","def get_neighbours(X_train, test_instance, k): \n","    distances = []\n","    neighbors = []\n","    for i in range(0, X_train.shape[0]): # for each image \n","        dist = euclidean_distance(X_train[i], test_instance) # dist. b/w  train and test data points\n","        distances.append((i, dist)) # list of euclidean distances\n","    distances.sort(key=lambda X_train:X_train[0]) # sorting the list \n","    for x in range(k):\n","        # print(distances[x])\n","        neighbors.append(distances[x][0]) # list of distances of k nearest neighbours\n","    return neighbors"],"metadata":{"id":"vrKV-dDbLT5o","executionInfo":{"status":"ok","timestamp":1650295922590,"user_tz":-330,"elapsed":8,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["def predictkNNClass(output, Y_train): #output===based on hypothesis\n","    alphabets = {} # storage of instances of each alphabet\n","    for i in range(len(output)):\n","     #print(output[i], Y_train[output[i]]) # if output is x, we check for xth value of Y_train\n","     if Y_train[output[i]][0] in alphabets:\n","            alphabets[Y_train[output[i]][0]] += 1  #storing the instances of a particular alphabet\n","     else:\n","            alphabets[Y_train[output[i]][0]] = 1\n","    sortedalphabets = sorted(alphabets.items(), key=lambda X_train:X_train[1], reverse=True) #sorting occurences in descending order\n","    print(sortedalphabets)\n","    return sortedalphabets[0][0]"],"metadata":{"id":"gPLgzyMXR2ol","executionInfo":{"status":"ok","timestamp":1650295922591,"user_tz":-330,"elapsed":9,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["eg_alph= 2 #  an example\n","k = 26\n","plt.imshow(X_test[eg_alph].reshape(28,28), cmap='gray', interpolation='none')"],"metadata":{"id":"CngqPjGJR9ob","executionInfo":{"status":"ok","timestamp":1650295922591,"user_tz":-330,"elapsed":8,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}},"colab":{"base_uri":"https://localhost:8080/","height":282},"outputId":"da600b94-8eb1-48f4-f9a1-a4fc0c3b55c2"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f7c35bd6510>"]},"metadata":{},"execution_count":59},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["instance_neighbours = get_neighbours(X_train, X_test[eg_alph], 26)\n","indices = instance_neighbours"],"metadata":{"id":"WOskCoWPUfd9","executionInfo":{"status":"ok","timestamp":1650295923020,"user_tz":-330,"elapsed":435,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["predictkNNClass(instance_neighbours, Y_train) #predicting the class(alphabet index) of the particular pixel set of an image"],"metadata":{"id":"7uabSqijUY2z","executionInfo":{"status":"ok","timestamp":1650296041333,"user_tz":-330,"elapsed":400,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0fb69159-cfb7-4197-d3f7-3bf7dbb5e943"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["[(21, 4), (11, 2), (24, 2), (10, 2), (5, 2), (7, 1), (16, 1), (15, 1), (23, 1), (17, 1), (13, 1), (22, 1), (14, 1), (18, 1), (26, 1), (19, 1), (2, 1), (25, 1), (9, 1)]\n"]},{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":[""],"metadata":{"id":"I0zDcsoatWev","executionInfo":{"status":"ok","timestamp":1650295923023,"user_tz":-330,"elapsed":19,"user":{"displayName":"Piyush Mishra","userId":"18021905101262466212"}}},"execution_count":61,"outputs":[]}]}